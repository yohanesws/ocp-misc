apiVersion: v1
kind: Template
labels:
  template: sakti-jasper-template
message: >-
  A Jasper server will be automatically instantiated in this project to manage

  if pod can't be run because of permission 

  Please run command below as cluster local
  
  oc adm policy add-scc-to-user anyuid -z jasper -n <NAMEPSACE>
metadata:
  annotations:
    description: >-
      This template For deploy jasper server for sakti
    openshift.io/display-name: Sakti Jasper
    tags: 'instant-app,jasper,sakti'
  name: sakti-jasper-template
parameters:
  - description: Japser Name
    displayName: Pipeline Name
    name: APP_NAME
    required: true
    value: sakti-jasper
  - description: Image and tag of jasper to run
    displayName: Jasper Image
    name: JASPER_IMAGE
    required: true
    value: sakti-jasper:latest
  - description: Image and tag of jasper namespace
    displayName: Jasper Image Namespace
    name: NAMESPACE_IMAGE
    required: true
    value: openshift
  - description: Hostname of database server for jasper
    displayName: DATABASE HOST
    name: DB_HOST
    required: true
    value: '10.242.99.42'
  - description: Port of database server for jasper
    displayName: DATABASE HOST
    name: DB_PORT
    required: true
    value: '5432'
  - description: Username of database server for jasper
    displayName: DATABASE USERNAME
    name: DB_USERNAME
    required: true
    value: 'postgres'
  - description: password of database server for jasper
    displayName: DATABASE PASSWORD
    name: DB_PASSWORD
    required: true
    value: 'postgres'
  - description: Schema of database server for jasper
    displayName: DATABASE Schema
    name: DB_SCHEMA
    required: true
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: jasper
- apiVersion: v1
  data:
    context.xml: |
      <Context path="/jasperserver" 
                  debug="5" reloadable="false" crossContext="true">
                  
              <!-- maxActive: Maximum number of dB connections in pool. Make sure you
                  configure your mysqld max_connections large enough to handle
                  all of your db connections. Set to 0 for no limit.
              -->
              <!-- maxIdle: Maximum number of idle dB connections to retain in pool.
                  Set to -1 for no limit.  See also the DBCP documentation on this
                  and the minEvictableIdleTimeMillis configuration parameter.
              -->
              <!-- maxWait: Maximum time to wait for a dB connection to become available
                  in ms, in this example 10 seconds. An Exception is thrown if
                  this timeout is exceeded.  Set to -1 to wait indefinitely.
              -->

          <!-- Additional properties for specifying a validation query to help   -->
          <!-- with reconnect/timeout errors. Exact syntax will vary with        -->
          <!-- database type (this tested on mysql).                             -->
          <!--                                                                   -->
          <!--   validationQuery="select 1"                                      -->
          <!--   testOnBorrow="true"                                             -->
          <!--   (and add to url property): &amp;autoReconnectForPools=true      -->
              
          <Resource name="jdbc/jasperserver" auth="Container" type="javax.sql.DataSource"
              maxActive="100" maxIdle="30" maxWait="10000"
              username="${DB_USERNAME}" password="${DB_PASSWORD}" 
              driverClassName="org.postgresql.Driver"
              validationQuery="SELECT 1"
              testOnBorrow="true"
              url="jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_SCHEMA}?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;autoReconnectForPools=true"/>

          <Resource name="jdbc/sugarcrm" auth="Container" type="javax.sql.DataSource"
              maxActive="100" maxIdle="30" maxWait="10000"
              username="jasperdb" password="password" 
              driverClassName="org.postgresql.Driver"
              validationQuery="SELECT 1"
              testOnBorrow="true"
              url="jdbc:postgresql://10.242.99.42:5432/sugarcrm?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;autoReconnectForPools=true"/>

          <Resource name="jdbc/foodmart" auth="Container" type="javax.sql.DataSource"
              maxActive="100" maxIdle="30" maxWait="10000"
              username="jasperdb" password="password" 
              driverClassName="org.postgresql.Driver"
              validationQuery="SELECT 1"
              testOnBorrow="true"
              url="jdbc:postgresql://10.242.99.42:5432/foodmart?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;autoReconnectForPools=true"/>
              
      </Context>
    default_master.properties: |-
      ################################################################################
      #                                                                              #
      # Master Properties File                                                       #
      #                                                                              #
      # Standard usage is to rename this file to default_master.properties.          #
      # It should be placed in the root of the buildomatic directory, like:          #
      #                                                                              #
      #     <js-install>/buildomatic/default_master.properties                       #
      #                                                                              #
      # There is one sample property file for each database type. Sample property    #
      # files are found in:                                                          #
      #                                                                              #
      #     <js-install>/buildomatic/sample_conf                                     #
      #                                                                              #
      ################################################################################

      ################################################################################
      #                                                                              #
      # Installation Settings                                                        #
      #                                                                              #
      # Set values for:                                                              #
      #                                                                              #
      #   1) Application server type                                                 #
      #                                                                              #
      #   2) Path to application server home directory                               #
      #                                                                              #
      #   3) Database location and connection settings                               #
      #                                                                              #
      ################################################################################

      # application server type (default is tomcat6)

      # appServerType = tomcat6
      # appServerType = tomcat5
      # appServerType = jboss
      # appServerType = glassfish2
      # appServerType = glassfish3
      # (beta) appServerType = weblogic
      # (beta) appServerType = websphere
      appServerType = skipAppServerCheck

      # Tomcat app server root dir
      appServerDir=/home/jasper/jasper-server/apache-tomcat

      #appServerDir = c:\\apache-tomcat-6.0.26
      # appServerDir = /home/devuser/apache-tomcat-6.0.26
      # appServerDir = /var/lib/tomcat6

      # JBoss app server root dir
      # appServerDir = c:\\jboss-5.1.0
      # appServerDir = /home/devuser/jboss-5.1.0
      # appServerDir = /usr/bin/jboss

      # Glassfish app server root dir
      # appServerDir = c:\\glassfish-2.1
      # appServerDir = /home/devuser/glassfish-2.1
      # appServerDir = /usr/bin/glassfish

      # database type
      dbType=postgresql

      # database location and connection settings

      dbHost=${DB_HOST}
      dbUsername=${DB_USERNAME}
      dbPassword=${DB_PASSWORD}


      # additional database parameters
      # (uncomment these if you want non-default settings)

      dbPort=${DB_PORT}

      # JasperServer db name, sample db names
       js.dbName=${DB_SCHEMA}
      # sugarcrm.dbName=sugarcrm
      # foodmart.dbName=foodmart

      # web app name
      # (set one of these to deploy to a non-default war file name)
      # webAppNameCE = jasperserver
      # webAppNamePro = jasperserver-pro

      #
      # JDBC driver version
      # (uncomment to change to a non-default setting)
      #
      # maven.jdbc.artifactId=postgresql
      # maven.jdbc.version=9.0-801.jdbc3
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: jasper-conf
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 8
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
        - image: 
          imagePullPolicy: Always
          name: ${APP_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /home/jasper/jasper-server/buildomatic/default_master.properties
            name: config-volume
            subPath: default_master.properties
          - mountPath: >-
              /home/jasper/jasper-server/apache-tomcat/webapps/jasperserver/META-INF/context.xml
            name: context-volume
            subPath: context.xml
          - mountPath: >-
              /home/jasper/jasper-server/apache-tomcat/conf/Catalina/localhost/jasperserver.xml
            name: jasper-config-vol
            subPath: jasperserver.xml
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: jasper
        serviceAccountName: jasper
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: jasper-conf
          name: config-volume
        - configMap:
            defaultMode: 420
            name: jasper-conf
          name: context-volume
        - configMap:
            defaultMode: 420
            items:
              - key: context.xml
                path: jasperserver.xml
            name: jasper-conf
          name: jasper-config-vol
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - sakti-jasper
        from:
          kind: ImageStreamTag
          name: ${JASPER_IMAGE}
          namespace: ${NAMESPACE_IMAGE}
      type: ImageChange
